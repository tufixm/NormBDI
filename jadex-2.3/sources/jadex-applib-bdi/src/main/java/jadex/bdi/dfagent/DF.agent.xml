<?xml version="1.0" encoding="UTF-8"?>
<!--
	<H3>The DF agent.</H3>
	The directory facilitator (yellow pages service). It is actually
	represented by the DF class. This agent allows the agent-oriented
	access (per message) to the DF.
	
	todo: allow more than one dfagent per platform (talking to other objects)
-->
<agent xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex
	                    http://jadex.sourceforge.net/jadex-bdi-2.3.xsd"
	name="DF"
	package="jadex.bdi.dfagent">

	<imports>
		<import>jadex.bridge.fipa.*</import>
		<import>jadex.standalone.*</import>
		<import>jadex.commons.IFilter</import>
	</imports>

	<capabilities>
		<capability name="dfcap" file="jadex.bdi.planlib.df.DF"/>
		<capability name="procap" file="jadex.bdi.planlib.protocols.request.Request"/>
	</capabilities>

	<beliefs>
		<beliefref name="rp_filter">
			<concrete ref="procap.rp_filter"/>
		</beliefref>
	</beliefs>

	<goals>
		<achievegoalref name="df_register">
 			<concrete ref="dfcap.df_register"/>
		</achievegoalref>

		<achievegoalref name="df_modify">
			<concrete ref="dfcap.df_modify"/>
		</achievegoalref>

<!--		<maintaingoalref name="df_keep_registered">
			<concrete ref="dfcap.df_keep_registered"/>
		</maintaingoalref>-->

		<achievegoalref name="df_deregister">
			<concrete ref="dfcap.df_deregister"/>
		</achievegoalref>

		<achievegoalref name="df_search">
 			<concrete ref="dfcap.df_search"/>
		</achievegoalref>

		<achievegoalref name="rp_execute_request">
			<concrete ref="procap.rp_execute_request"/>
		</achievegoalref>
	</goals>

	<plans>
		<plan name="register_plan">
			<parameter name="action" class="Object">
				<goalmapping ref="rp_execute_request.action"/>
			</parameter>
			<parameter name="result" class="Object" direction="out" optional="true">
				<goalmapping ref="rp_execute_request.result"/>
			</parameter>
			<body class="DFRegisterPlan" />
			<trigger>
				<goal ref="rp_execute_request">
					<match>$goal.getParameter("action").getValue() instanceof DFRegister</match>
				</goal>
			</trigger>
		</plan>

		<plan name="modify_plan">
			<parameter name="action" class="Object">
				<goalmapping ref="rp_execute_request.action"/>
			</parameter>
			<parameter name="result" class="Object" direction="out" optional="true">
				<goalmapping ref="rp_execute_request.result"/>
			</parameter>
			<body class="DFModifyPlan" />
			<trigger>
				<goal ref="rp_execute_request">
					<match>$goal.getParameter("action").getValue() instanceof DFModify</match>
				</goal>
			</trigger>
		</plan>

		<plan name="deregister_plan">
			<parameter name="action" class="Object">
				<goalmapping ref="rp_execute_request.action"/>
			</parameter>
			<parameter name="result" class="Object" direction="out" optional="true">
				<goalmapping ref="rp_execute_request.result"/>
			</parameter>
			<body class="DFDeregisterPlan" />
			<trigger>
				<goal ref="rp_execute_request">
					<match>$goal.getParameter("action").getValue() instanceof DFDeregister</match>
				</goal>
			</trigger>
		</plan>

		<plan name="search_plan">
			<parameter name="action" class="Object">
				<goalmapping ref="rp_execute_request.action"/>
			</parameter>
			<parameter name="result" class="Object" direction="out" optional="true">
				<goalmapping ref="rp_execute_request.result"/>
			</parameter>
			<body class="DFSearchPlan" />
			<trigger>
				<goal ref="rp_execute_request">
					<match>$goal.getParameter("action").getValue() instanceof DFSearch</match>
				</goal>
			</trigger>
		</plan>
	</plans>

	<properties>
		<property name="logging.level">java.util.logging.Level.SEVERE</property>
<!--		<property name="debugging">true</property>-->
	</properties>

	<configurations>
		<configuration name="default">
			<beliefs>
				<initialbelief ref="rp_filter">
					<fact>IFilter.ALWAYS</fact>
				</initialbelief>
			</beliefs>
		</configuration>
	</configurations>

</agent>