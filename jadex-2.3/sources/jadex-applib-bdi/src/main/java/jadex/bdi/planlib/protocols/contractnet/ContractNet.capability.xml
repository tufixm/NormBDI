<?xml version="1.0" encoding="UTF-8"?>
<!--
	The contract-net capability enables an easy goal-driven usage of
	the FIPA contract-net and iterated contract-net protocol.
-->
<capability xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex
	                    http://jadex.sourceforge.net/jadex-bdi-2.3.xsd"
	package="jadex.bdi.planlib.protocols.contractnet"
	name="ContractNet">

	<imports>
		<import>jadex.bridge.fipa.*</import>
		<import>jadex.bdi.runtime.*</import>
		<import>jadex.bdi.planlib.protocols.*</import>
		<import>java.util.*</import>
		<import>jadex.rules.rulesystem.rules.functions.*</import>
		<import>jadex.commons.IFilter</import>
	</imports>
	
	<capabilities>
		<capability name="cmcap" file="jadex.bdi.planlib.protocols.cancelmeta.CancelMeta"/>
	</capabilities>

	<beliefs>
		<!-- Timeout for messages. -->
		<belief name="timeout" class="Long" exported="true">
			<fact>
				// (Integer)$properties.get("standard.timeout")
				20000L
			</fact>
		</belief>

		<!-- Filters are only relevant for the participants protocol side. -->

		<!-- The filter for deciding which initial request messages are handled in this capability. -->
		<belief name="cnp_filter" class="IFilter" exported="true">
			<fact>IFilter.NEVER</fact>
		</belief>

		<!-- The filter for deciding which initial request messages are handled in this capability. -->
		<belief name="icnp_filter" class="IFilter" exported="true">
			<fact>IFilter.NEVER</fact>
		</belief>
		
		<!-- Hack!!! required for dynamic parameter value in JCL. -->
		<belief name="true_const" class="boolean">
			<fact>true</fact>
		</belief>

	</beliefs>

	<goals>
	
		<!-- FIPA contract net protocol. -->

		<!-- (Initiator side) Initiate a call for proposal protcol. -->
		<achievegoal name="cnp_initiate" exported="true">
			<!-- The call-for-proposals is in the content. -->
			<parameter name="cfp" class="Object"/>
			<!-- The call-for-proposals info (local information). -->
			<parameter name="cfp_info" class="Object" direction="inout" optional="true"/>
			<!-- Optional ontology for marshalling. -->
			<parameter name="ontology" class="String" optional="true"/>
			<!-- Optional language for marshalling. -->
			<parameter name="language" class="String" optional="true"/>
			<!-- Optional conversation id. -->
			<parameter name="conversation_id" class="String" optional="true"/>
			<!-- The timeout used during the negotiation. -->
			<parameter name="timeout" class="Long" optional="true"/>
			<!-- If several proposals are acceptable, should all be accepted. -->
			<parameter name="executeall" class="Boolean" optional="true">
				<value>Boolean.FALSE</value>
			</parameter>
			<!-- The interaction state. -->
			<parameter name="interaction_state" class="InteractionState" direction="out">
				<value>new InteractionState()</value>
			</parameter>
			<!-- The (initial) negotiation participants. -->
			<parameterset name="receivers" class="jadex.bridge.IComponentIdentifier"/>
			<!-- The tasks done by the winners. -->
			<parameterset name="result" class="Object" direction="out"/>
			<!-- The negotiation history. -->
			<parameterset name="history" class="NegotiationRecord" optional="true" direction="out"/>
		</achievegoal>
		
		<!-- (Initiator side) Evaluate the received proposals. -->
		<querygoal name="cnp_evaluate_proposals" exported="true">
			<!-- The original call-for-proposals. -->
			<parameter name="cfp" class="Object"/>
			<!-- The call-for-proposals info (local information). -->
			<parameter name="cfp_info" class="Object" optional="true" direction="inout"/>
			<!-- Dummy parameter that leads to goal completion, when an acceptable proposal is available or all proposals are evaluated. -->
			<parameter name="evaluated" class="Boolean" direction="out" evaluationmode="push">
				<value language="jcl" variable="$ret">
					// ($goal.acceptables.length>0 ||
					// (select one ParticipantProposal $prop from $goal.proposals
					// where $prop.getEvaluation()==null)==null) ? true : null
					
					$beliefbase.true_const==$ret
					// $ret==true // Currently not supported by Rete builder.
					&amp;&amp;
					!($goal.acceptables.length==0 &amp;&amp;
						ParticipantProposal $prop &amp;&amp;
						$prop.getEvaluation()==null &amp;&amp;
						Arrays.asList($goal.proposals).contains($prop))
				</value>
			</parameter>
			<!-- The received proposals. -->
			<parameterset name="proposals" class="ParticipantProposal"/>
			<!-- The negotiation history. -->
			<parameterset name="history" class="NegotiationRecord"/>
			<!--  The acceptable proposals, sorted by preference (best proposal first). -->
			<parameterset name="acceptables" class="ParticipantProposal" optional="true" direction="out"/>
		</querygoal>

		<!-- (Participant side) Contract-net protocol interaction goal (top-level goal of all receiver-side interactions). -->
		<performgoal name="cnp_receiver_interaction" retry="false" exported="true">
			<!-- The message that initiated the protocol. -->
			<parameter name="message" class="IMessageEvent"/>
			<!-- The interaction description (content of first message). -->
			<parameter name="interaction_description" class="Object" direction="out"/>
			<!-- The interaction state. -->
			<parameter name="interaction_state" class="InteractionState" direction="out">
				<value>new InteractionState()</value>
			</parameter>
			<!-- The interaction result. -->
			<parameter name="result" class="Object" direction="out"/>
		</performgoal>

		<!-- (Participant side) Make a cfp proposal. -->
		<querygoal name="cnp_make_proposal" exported="true">
			<!-- The cfp describing the task to be done. -->
			<parameter name="cfp" class="Object"/>
			<!-- The initiator of the interaction. -->
			<parameter name="initiator" class="jadex.bridge.IComponentIdentifier"/>
			<!-- The proposal for doing the task. -->
			<parameter name="proposal" class="Object" direction="out"/>
			<!-- Optional information about the task that will be tranferred
			to the task execution step (not sent to initiator).-->
			<parameter name="proposal_info" class="Object" direction="out" optional="true"/>
		</querygoal>

		<!-- (Participant side) Execute a cfp task. -->
		<achievegoal name="cnp_execute_task" exported="true">
			<!-- The proposal for doing the task. -->
			<parameter name="proposal" class="Object"/>
			<!-- Optional information about the task from the 
			preceding step (not sent to initiator).-->
			<parameter name="proposal_info" class="Object" optional="true"/>
			<!-- The initiator of the interaction. -->
			<parameter name="initiator" class="jadex.bridge.IComponentIdentifier"/>
			<!-- Information about the task execution. -->
			<parameter name="result" class="Object" direction="out" optional="true"/>
		</achievegoal>
		
		<!-- FIPA iterated contract net protocol. -->

		<!-- (Initiator side) Initiate a call for proposal protcol. -->
		<achievegoal name="icnp_initiate" exported="true">
			<!-- The call-for-proposals is in the content. -->
			<parameter name="cfp" class="Object"/>
			<!-- The call-for-proposals info (local information). -->
			<parameter name="cfp_info" class="Object" direction="inout" optional="true"/>
			<!-- Optional ontology for marshalling. -->
			<parameter name="ontology" class="String" optional="true"/>
			<!-- Optional language for marshalling. -->
			<parameter name="language" class="String" optional="true"/>
			<!-- Optional conversation id. -->
			<parameter name="conversation_id" class="String" optional="true"/>
			<!-- The timeout used during the negotiation. -->
			<parameter name="timeout" class="Long" optional="true"/>
			<!-- If several proposals are acceptable, should all be accepted. -->
			<parameter name="executeall" class="Boolean" optional="true">
				<value>Boolean.FALSE</value>
			</parameter>
			<!-- The interaction state. -->
			<parameter name="interaction_state" class="InteractionState" direction="out">
				<value>new InteractionState()</value>
			</parameter>
			<!-- The (initial) negotiation participants. -->
			<parameterset name="receivers" class="jadex.bridge.IComponentIdentifier"/>
			<!-- The tasks done by the winners. -->
			<parameterset name="result" class="Object" direction="out"/>
			<!-- The negotiation history. -->
			<parameterset name="history" class="NegotiationRecord" direction="out"/>
		</achievegoal>
		
		<!-- (Initiator side) Evaluate the received proposals. -->
		<querygoal name="icnp_evaluate_proposals" exported="true">
			<!-- The original call-for-proposals. -->
			<parameter name="cfp" class="Object"/>
			<!-- The call-for-proposals info (local information). -->
			<parameter name="cfp_info" class="Object" optional="true" direction="inout"/>
			<!-- Dummy paramter that leads to goal completion, when an acceptable proposal is available or all proposals are evaluated. -->
			<parameter name="evaluated" class="Boolean" direction="out" evaluationmode="push">
				<value language="jcl" variable="$ret">
					// ($goal.acceptables.length>0 ||
					// (select one ParticipantProposal $prop from $goal.proposals
					// where $prop.getEvaluation()==null)==null) ? true : null
					
					$beliefbase.true_const==$ret
					// $ret==true // Currently not supported by Rete builder.
					&amp;&amp;
					!($goal.acceptables.length==0 &amp;&amp;
						ParticipantProposal $prop &amp;&amp;
						$prop.getEvaluation()==null &amp;&amp;
						Arrays.asList($goal.proposals).contains($prop))
				</value>
			</parameter>
			<!-- The received proposals -->
			<parameterset name="proposals" class="ParticipantProposal"/>
			<!-- The negotiation history. -->
			<parameterset name="history" class="NegotiationRecord"/>
			<!-- The acceptable proposals, sorted by preference (best proposal first).
				 By default, setting acceptable proposals will end the protocol (i.e. no more iterations). -->
			<parameterset name="acceptables" class="ParticipantProposal" optional="true" direction="out"/>
		</querygoal>
		
		<!-- (Initiator side) Collect information for next round (if any). -->
		<querygoal name="icnp_nextround_info" exported="true">
			<!-- The call-for-proposal object sent to participants (should be refined for next round). -->
			<parameter name="cfp" class="Object" direction="inout"/>
			<!-- The call-for-proposal info (local information, can be refined for next round). -->
			<parameter name="cfp_info" class="Object" optional="true" direction="inout"/>
			<!-- Flag indicating the decision to iterate (set to true or false to end goal). -->
			<parameter name="iterate" class="Boolean" direction="out"/>
			<!-- The participants (can be altered for next negotiation round). -->
			<parameterset name="participants" class="jadex.bridge.IComponentIdentifier" direction="inout"/>
			<!-- The proposals, received from participants including evaluation (if any). -->
			<parameterset name="proposals" class="ParticipantProposal"/>
			<!-- The negotiation history. -->
			<parameterset name="history" class="NegotiationRecord"/>
		</querygoal>

		<!-- (Participant side) Iterated contract-net protocol interaction goal (top-level goal of all receiver-side interactions). -->
		<performgoal name="icnp_receiver_interaction" retry="false" exported="true">
			<!-- The message that initiated the protocol. -->
			<parameter name="message" class="IMessageEvent"/>
			<!-- The interaction description (content of first message). -->
			<parameter name="interaction_description" class="Object" direction="out"/>
			<!-- The interaction state. -->
			<parameter name="interaction_state" class="InteractionState" direction="out">
				<value>new InteractionState()</value>
			</parameter>
			<!-- The interaction result. -->
			<parameter name="result" class="Object" direction="out"/>
		</performgoal>

		<!-- (Participant side) Make a cfp proposal. -->
		<querygoal name="icnp_make_proposal" exported="true">
			<!-- The cfp describing the task to be done. -->
			<parameter name="cfp" class="Object"/>
			<!-- The initiator of the interaction. -->
			<parameter name="initiator" class="jadex.bridge.IComponentIdentifier"/>
			<!-- The proposal for doing the task. -->
			<parameter name="proposal" class="Object" direction="out"/>
			<!-- Optional information about the task that will be tranferred
			to the task execution step (not sent to initiator).-->
			<parameter name="proposal_info" class="Object" direction="out" optional="true"/>
		</querygoal>

		<!-- (Participant side) Execute a cfp task. -->
		<achievegoal name="icnp_execute_task" exported="true">
			<!-- The proposal for doing the task. -->
			<parameter name="proposal" class="Object"/>
			<!-- Optional information about the task from the 
			preceding step (not sent to initiator).-->
			<parameter name="proposal_info" class="Object" optional="true"/>
			<!-- The initiator of the interaction. -->
			<parameter name="initiator" class="jadex.bridge.IComponentIdentifier"/>
			<!-- Information about the task execution. -->
			<parameter name="result" class="Object" direction="out" optional="true"/>
		</achievegoal>
		
		<!-- Generic goals. -->

		<!-- A subgoal that can be posted to trigger  to protocol specific
			 interaction handling. Should be used when implementing custom
			 plan for receiver interaction goal. -->
		<performgoal name="perform_interaction" retry="false" exported="true">
			<!-- The message should be assign from the superordinated goal. -->
			<parameter name="message" class="IMessageEvent"/>
			<!-- The interaction description (content of first message). -->
			<parameter name="interaction_description" class="Object" direction="out"/>
			<!-- The interaction state should be assign from the superordinated goal. -->
			<parameter name="interaction_state" class="InteractionState" direction="out"/>
			<!-- The result should be passed back to the superordinated goal. -->
			<parameter name="result" class="Object" direction="out"/>
		</performgoal>

	</goals>

	<plans>
		<!-- FIPA Contract Net Protocol -->

		<plan name="cnp_initiator_plan">
			<parameter name="iterated" class="Boolean">
				<value>Boolean.FALSE</value>
			</parameter>
			<parameter name="cfp" class="Object">
				<goalmapping ref="cnp_initiate.cfp"/>
			</parameter>
			<parameter name="cfp_info" class="Object" direction="inout">
				<goalmapping ref="cnp_initiate.cfp_info"/>
			</parameter>
			<parameter name="ontology" class="String">
				<goalmapping ref="cnp_initiate.ontology"/>
			</parameter>
			<parameter name="language" class="String">
				<goalmapping ref="cnp_initiate.language"/>
			</parameter>
			<parameter name="conversation_id" class="String">
				<goalmapping ref="cnp_initiate.conversation_id"/>
			</parameter>
			<parameter name="timeout" class="Long">
				<goalmapping ref="cnp_initiate.timeout"/>
			</parameter>
			<parameter name="executeall" class="boolean">
				<goalmapping ref="cnp_initiate.executeall"/>
			</parameter>
			<parameter name="interaction_state" class="InteractionState" direction="out">
				<goalmapping ref="cnp_initiate.interaction_state"/>
			</parameter>
			<parameterset name="receivers" class="jadex.bridge.IComponentIdentifier">
				<goalmapping ref="cnp_initiate.receivers"/>
			</parameterset>
			<parameterset name="result" class="Object" direction="out">
				<goalmapping ref="cnp_initiate.result"/>
			</parameterset>
			<parameterset name="history" class="NegotiationRecord" direction="out">
				<goalmapping ref="cnp_initiate.history"/>
			</parameterset>
			<body class="CNPInitiatorPlan" />
			<trigger>
				<goal ref="cnp_initiate"/>
			</trigger>
		</plan>

		<!-- Default plan for evaluate proposals goal. -->
		<plan name="cnp_evaluateproposals_plan" priority="-1">
			<parameter name="cfp" class="Object">
				<goalmapping ref="cnp_evaluate_proposals.cfp"/>
			</parameter>
			<parameter name="cfp_info" class="Object" direction="inout">
				<goalmapping ref="cnp_evaluate_proposals.cfp_info"/>
			</parameter>
			<parameterset name="proposals" class="ParticipantProposal">
				<goalmapping ref="cnp_evaluate_proposals.proposals"/>
			</parameterset>
			<parameterset name="acceptables" class="ParticipantProposal" optional="true" direction="out">
				<goalmapping ref="cnp_evaluate_proposals.acceptables"/>
			</parameterset>
			<parameterset name="history" class="NegotiationRecord">
				<goalmapping ref="cnp_evaluate_proposals.history"/>
			</parameterset>
			<body class="CNPEvaluateProposalsPlan" />
			<trigger>
				<goal ref="cnp_evaluate_proposals"/>
			</trigger>
			<precondition>$goal.cfp_info instanceof IProposalEvaluator</precondition>
		</plan>
		
		<!-- Generic interaction goal creation plan. -->
		<plan name="cnp_interaction_goal_creation_plan">
			<parameter name="goaltype" class="String">
				<value>"cnp_receiver_interaction"</value>
			</parameter>
			<body class="InteractionGoalCreationPlan" />
			<trigger>
				<messageevent ref="cnp_cfp"/>
			</trigger>
		</plan>

		<plan name="cnp_receiver_plan">
			<parameter name="iterated" class="Boolean">
				<value>Boolean.FALSE</value>
			</parameter>
			<parameter name="message" class="IMessageEvent">
				<goalmapping ref="cnp_receiver_interaction.message"/>
				<goalmapping ref="perform_interaction.message"/>
			</parameter>
			<parameter name="interaction_state" class="InteractionState" direction="out">
				<goalmapping ref="cnp_receiver_interaction.interaction_state"/>
				<goalmapping ref="perform_interaction.interaction_state"/>
			</parameter>
			<parameter name="interaction_description" class="Object" direction="out">
				<goalmapping ref="cnp_receiver_interaction.interaction_description"/>
				<goalmapping ref="perform_interaction.interaction_description"/>
			</parameter>
			<parameter name="result" class="Object" direction="out">
				<goalmapping ref="cnp_receiver_interaction.result"/>
				<goalmapping ref="perform_interaction.result"/>
			</parameter>
			<body class="CNPReceiverPlan" />
			<trigger>
				<goal ref="cnp_receiver_interaction"/>
				<goal ref="perform_interaction">
					<match>SFipa.PROTOCOL_CONTRACT_NET.equals($goal.message.getParameter(SFipa.PROTOCOL).getValue())</match>
				</goal>
			</trigger>
		</plan>
		
		<!-- FIPA Iteratated Contract Net Protocol -->
		
		<plan name="icnp_initiator_plan">
			<parameter name="iterated" class="Boolean">
				<value>Boolean.TRUE</value>
			</parameter>
			<parameter name="cfp" class="Object">
				<goalmapping ref="icnp_initiate.cfp"/>
			</parameter>
			<parameter name="cfp_info" class="Object" direction="inout">
				<goalmapping ref="icnp_initiate.cfp_info"/>
			</parameter>
			<parameter name="ontology" class="String">
				<goalmapping ref="icnp_initiate.ontology"/>
			</parameter>
			<parameter name="language" class="String">
				<goalmapping ref="icnp_initiate.language"/>
			</parameter>
			<parameter name="conversation_id" class="String">
				<goalmapping ref="icnp_initiate.conversation_id"/>
			</parameter>
			<parameter name="timeout" class="Long">
				<goalmapping ref="icnp_initiate.timeout"/>
			</parameter>
			<parameter name="executeall" class="boolean">
				<goalmapping ref="icnp_initiate.executeall"/>
			</parameter>
			<parameter name="interaction_state" class="InteractionState" direction="out">
				<goalmapping ref="icnp_initiate.interaction_state"/>
			</parameter>
			<parameterset name="receivers" class="jadex.bridge.IComponentIdentifier">
				<goalmapping ref="icnp_initiate.receivers"/>
			</parameterset>
			<parameterset name="result" class="Object" direction="out">
				<goalmapping ref="icnp_initiate.result"/>
			</parameterset>
			<parameterset name="history" class="NegotiationRecord" direction="out">
				<goalmapping ref="icnp_initiate.history"/>
			</parameterset>
			<body class="CNPInitiatorPlan" />
			<trigger>
				<goal ref="icnp_initiate"/>
			</trigger>
		</plan>

		<!-- Default plan for evaluate proposals goal. -->
		<plan name="icnp_evaluateproposals_plan" priority="-1">
			<parameter name="cfp" class="Object">
				<goalmapping ref="icnp_evaluate_proposals.cfp"/>
			</parameter>
			<parameter name="cfp_info" class="Object" direction="inout">
				<goalmapping ref="icnp_evaluate_proposals.cfp_info"/>
			</parameter>
			<parameterset name="proposals" class="ParticipantProposal">
				<goalmapping ref="icnp_evaluate_proposals.proposals"/>
			</parameterset>
			<parameterset name="acceptables" class="ParticipantProposal" optional="true" direction="out">
				<goalmapping ref="icnp_evaluate_proposals.acceptables"/>
			</parameterset>
			<parameterset name="history" class="NegotiationRecord">
				<goalmapping ref="icnp_evaluate_proposals.history"/>
			</parameterset>
			<body class="CNPEvaluateProposalsPlan" />
			<trigger>
				<goal ref="icnp_evaluate_proposals"/>
			</trigger>
			<precondition>$goal.cfp_info instanceof IProposalEvaluator</precondition>
		</plan>

		<!-- Default plan for query nextround-info goal. -->
		<plan name="icnp_querynextroundinfo_plan" priority="-1">
			<parameter name="cfp" class="Object" direction="inout">
				<goalmapping ref="icnp_nextround_info.cfp"/>
			</parameter>
			<parameter name="cfp_info" class="Object" direction="inout">
				<goalmapping ref="icnp_nextround_info.cfp_info"/>
			</parameter>
			<parameter name="iterate" class="Boolean" direction="out">
				<goalmapping ref="icnp_nextround_info.iterate"/>
			</parameter>			
			<parameterset name="participants" class="jadex.bridge.IComponentIdentifier" direction="inout">
				<goalmapping ref="icnp_nextround_info.participants"/>
			</parameterset>
			<parameterset name="proposals" class="ParticipantProposal">
				<goalmapping ref="icnp_nextround_info.proposals"/>
			</parameterset>
			<parameterset name="history" class="NegotiationRecord">
				<goalmapping ref="icnp_nextround_info.history"/>
			</parameterset>
			<body class="CNPQueryNextroundInfoPlan" />
			<trigger>
				<goal ref="icnp_nextround_info"/>
			</trigger>
			<precondition>$goal.cfp_info instanceof IQueryNextroundInfo</precondition>
		</plan>

		<plan name="icnp_interaction_goal_creation_plan">
			<parameter name="goaltype" class="String">
				<value>"icnp_receiver_interaction"</value>
			</parameter>
			<body class="InteractionGoalCreationPlan" />
			<trigger>
				<messageevent ref="icnp_cfp"/>
			</trigger>
		</plan>

		<plan name="icnp_receiver_plan">
			<parameter name="iterated" class="Boolean">
				<value>Boolean.TRUE</value>
			</parameter>
			<parameter name="message" class="IMessageEvent">
				<goalmapping ref="icnp_receiver_interaction.message"/>
				<goalmapping ref="perform_interaction.message"/>
			</parameter>
			<parameter name="interaction_state" class="InteractionState" direction="out">
				<goalmapping ref="icnp_receiver_interaction.interaction_state"/>
				<goalmapping ref="perform_interaction.interaction_state"/>
			</parameter>
			<parameter name="interaction_description" class="Object" direction="out">
				<goalmapping ref="icnp_receiver_interaction.interaction_description"/>
				<goalmapping ref="perform_interaction.interaction_description"/>
			</parameter>
			<parameter name="result" class="Object" direction="out">
				<goalmapping ref="icnp_receiver_interaction.result"/>
				<goalmapping ref="perform_interaction.result"/>
			</parameter>
			<body class="CNPReceiverPlan" />
			<trigger>
				<goal ref="icnp_receiver_interaction"/>
				<goal ref="perform_interaction">
					<match>SFipa.PROTOCOL_ITERATED_CONTRACT_NET.equals($goal.message.getParameter(SFipa.PROTOCOL).getValue())</match>
				</goal>
			</trigger>
		</plan>
		
	</plans>

	<events>
		<!--- cnp -->

		<messageevent name="cnp_cfp" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.CFP</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_CONTRACT_NET</value>
			</parameter>
			<!-- hmm inout needed to read it in plan :-( -->
			<parameter name="conversation_id" class="String" direction="inout">
				<value>SFipa.createUniqueId($scope.getAgentName())</value>
			</parameter>
			<!--<parameter name="reply_with" class="String">
				<value>SFipa.createUniqueId($scope.getAgentName())</value>
			</parameter>-->
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
			<match>/* $beliefbase.cnp_filter.filter($messagemap) &amp;&amp; */ $conversation_id!=null</match>
		</messageevent>

		<messageevent name="cnp_propose" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.PROPOSE</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_CONTRACT_NET</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
 			<match>$conversation_id!=null</match>
		</messageevent>

		<messageevent name="cnp_refuse" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REFUSE</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_CONTRACT_NET</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
 			<match>$conversation_id!=null</match>
		</messageevent>

		<messageevent name="cnp_reject" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REJECT_PROPOSAL</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_CONTRACT_NET</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
 			<match>$conversation_id!=null</match>
		</messageevent>

		<messageevent name="cnp_accept" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.ACCEPT_PROPOSAL</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_CONTRACT_NET</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
 			<match>$conversation_id!=null</match>
		</messageevent>

		<messageevent name="cnp_inform" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_CONTRACT_NET</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
 			<match>$conversation_id!=null</match>
		</messageevent>

		<messageevent name="cnp_failure" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.FAILURE</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_CONTRACT_NET</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
 			<match>$conversation_id!=null</match>
		</messageevent>
		
		<messageevent name="cnp_not_understood" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.NOT_UNDERSTOOD</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_CONTRACT_NET</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
 			<match>$conversation_id!=null</match>
		</messageevent>
		
		<!--- icnp -->

		<messageevent name="icnp_cfp" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.CFP</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_ITERATED_CONTRACT_NET</value>
			</parameter>
			<!-- hmm inout needed to read it in plan :-( -->
			<parameter name="conversation_id" class="String" direction="inout">
				<value>SFipa.createUniqueId($scope.getAgentName())</value>
			</parameter>
			<!--<parameter name="reply_with" class="String">
				<value>SFipa.createUniqueId($scope.getAgentName())</value>
			</parameter>-->
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
			<match>/* $beliefbase.icnp_filter.filter($messagemap) &amp;&amp; */ $conversation_id!=null</match>
		</messageevent>

		<messageevent name="icnp_propose" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.PROPOSE</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_ITERATED_CONTRACT_NET</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
 			<match>$conversation_id!=null</match>
		</messageevent>

		<messageevent name="icnp_refuse" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REFUSE</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_ITERATED_CONTRACT_NET</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
 			<match>$conversation_id!=null</match>
		</messageevent>

		<messageevent name="icnp_reject" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REJECT_PROPOSAL</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_ITERATED_CONTRACT_NET</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
 			<match>$conversation_id!=null</match>
		</messageevent>

		<messageevent name="icnp_accept" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.ACCEPT_PROPOSAL</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_ITERATED_CONTRACT_NET</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
 			<match>$conversation_id!=null</match>
		</messageevent>

		<messageevent name="icnp_inform" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_ITERATED_CONTRACT_NET</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
 			<match>$conversation_id!=null</match>
		</messageevent>

		<messageevent name="icnp_failure" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.FAILURE</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_ITERATED_CONTRACT_NET</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
 			<match>$conversation_id!=null</match>
		</messageevent>
		
		<messageevent name="icnp_not_understood" type="fipa" exported="true">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.NOT_UNDERSTOOD</value>
			</parameter>
			<parameter name="protocol" class="String" direction="fixed">
				<value>SFipa.PROTOCOL_ITERATED_CONTRACT_NET</value>
			</parameter>
			<parameter name="language" class="String">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
 			<match>$conversation_id!=null</match>
		</messageevent>
		
	</events>
	
	<properties>
		<!-- <property name="logging.level">java.util.logging.Level.INFO</property> -->
	</properties>

</capability>
