<?xml version="1.0" encoding="UTF-8"?>
<!--
	<H3>Test deliberation.</H3>

	Three goals are executed to test type and instance level deliberation.
	Without deliberation the result would be C, B, A. With deliberation
	it should be A, B, C.
-->
<agent xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex
	                    http://jadex.sourceforge.net/jadex-bdi-2.3.xsd"
	name="Deliberation"
	package="jadex.bdi.testcases.goals">

	<imports>
		<import>jadex.bdi.testcases.*</import>
		<import>jadex.base.test.*</import>
		<import>jadex.commons.*</import>
		<import>java.util.Arrays</import>
	</imports>

	<capabilities>
		<capability name="testcap" file="jadex.bdi.planlib.test.Test"/>
	</capabilities>

	<beliefs>
		<beliefsetref name="reports">
			<concrete ref="testcap.reports"/>
		</beliefsetref>
		<beliefref name="timeout"  exported="true">
			<concrete ref="testcap.timeout"/>
		</beliefref>
		<beliefref name="testresults"  result="true">
			<concrete ref="testcap.testresults"/>
		</beliefref>
		<beliefset name="result" class="String"/>
	</beliefs>

	<goals>
		<performgoal name="goal1">
			<parameter name="wait" class="long"/>
			<parameter name="result" class="String"/>
 			<deliberation>
				<inhibits ref="goal2"/>
 				<inhibits ref="goal1">
					$goal.wait > $ref.wait
				</inhibits>
			</deliberation>
		</performgoal>
		<performgoal name="goal2">
			<parameter name="wait" class="long"/>
			<parameter name="result" class="String"/>
		</performgoal>
	</goals>

	<plans>
		<plan name="resultplan">
			<parameter name="wait" class="long">
				<goalmapping ref="goal1.wait"/>
				<goalmapping ref="goal2.wait"/>
			</parameter>
			<parameter name="value" class="String">
				<goalmapping ref="goal1.result"/>
				<goalmapping ref="goal2.result"/>
			</parameter>
			<parameter name="beliefsetname" class="String">
				<value>"result"</value>
			</parameter>
			<body class="BeliefSetAddPlan"/>
			<trigger>
				<goal ref="goal1"/>
				<goal ref="goal2"/>
			</trigger>
		</plan>
		<plan name="reportplan">
			<parameter name="report" class="TestReport">
				<value>
					Arrays.equals($beliefbase.result, new String[]{"A", "B", "C"})
					? new TestReport("#1", "Test if deliberation works", true, null)
					: new TestReport("#1", "Test if deliberation works", false, "Expected A, B, C, but was: "+SUtil.arrayToString($beliefbase.result))
				</value>
			</parameter>
			<body class="StoreReportPlan"/>
			<trigger>
				<condition>$beliefbase.result.length==3</condition>
			</trigger>
		</plan>
	</plans>

	<properties>
		<!-- <property name="logging.level">java.util.logging.Level.INFO</property>-->
		<property name="debugging">false</property>
	</properties>

	<configurations>
		<configuration name="default">
			<goals>
				<initialgoal ref="goal2">
					<parameter ref="wait">
						<value>500</value>
					</parameter>
					<parameter ref="result">
						<value>"C"</value>
					</parameter>
				</initialgoal>
				<initialgoal ref="goal1">
					<parameter ref="wait">
						<value>1000</value>
					</parameter>
					<parameter ref="result">
						<value>"B"</value>
					</parameter>
				</initialgoal>
				<initialgoal ref="goal1">
					<parameter ref="wait">
						<value>2000</value>
					</parameter>
					<parameter ref="result">
						<value>"A"</value>
					</parameter>
				</initialgoal>
			</goals>
		</configuration>
	</configurations>

</agent>
