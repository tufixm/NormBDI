<?xml version="1.0" encoding="UTF-8"?>
<!--
	<H3>Carry agent for carrying ore.</H3>

	This Agent is called by the Production
	Agent to carry the produced ore. 
-->
<agent xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex
	                    http://jadex.sourceforge.net/jadex-bdi-2.3.xsd"
	name="Carry"
	package="jadex.bdi.examples.spaceworld3d.carry">

	<imports>
		<import>java.util.*</import>
		<import>java.util.logging.*</import>
		<import>jadex.bridge.fipa.*</import>
		<import>jadex.extension.envsupport.environment.*</import>
		<import>jadex.bdi.examples.spaceworld3d.*</import>
		<import>jadex.bdi.examples.spaceworld3d.movement.*</import>
	</imports>

	<capabilities>
		<!-- Include the move capability as move for basic movement. -->
		<capability name="move" file="Movement" />
	</capabilities>

	<beliefs>
		<!-- Missionend belief is used in drop condition of carry ore goal. -->
		<beliefref name="missionend">
			<concrete ref="move.missionend"/>
		</beliefref>
	</beliefs>

  	<goals>
		<!-- Carry ore to the homebase. -->
		<achievegoal name="carry_ore">
			<parameter name="target" class="ISpaceObject"/>
 			<dropcondition language="jcl">
				$beliefbase.missionend
				// (belief (element_has_model.melement_has_name "missionend") (belief_has_fact true))
			</dropcondition>
			<deliberation>
				<inhibits cref="move.walk_around"/>
			</deliberation>
		</achievegoal>
	</goals>

	<plans>
		<!-- The main plan handling action requests. -->
		<plan name="carry_plan">
			<body class="CarryPlan"/>
			<waitqueue>
				<messageevent ref="request_carry"/>
			</waitqueue>
		</plan>

		<!-- Carry ore to the homebase. -->
		<plan name="carry_ore_plan">
			<parameter name="target" class="ISpaceObject">
				<goalmapping ref="carry_ore.target"/>
			</parameter>
			<body class="CarryOrePlan"/>
			<trigger>
				<goal ref="carry_ore"/>
			</trigger>
		</plan>

		<!-- Inform sentries about new targets. -->
		<plan name="informer">
			<body class="InformNewTargetPlan"/>
			<!-- Inform whenever a new fact is added to the belief set my_targets. -->
			<trigger>
				<factadded cref="move.my_targets"/>
			</trigger>
		</plan>
	</plans>

	<events>
		<!-- Message event for carry ore task allocation. -->
		<messageevent name="request_carry" type="fipa" direction="receive">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
			<match>$content instanceof RequestCarry</match>
		</messageevent>

		<!-- Message event for informing sentries about new targets. -->
		<messageevent name="inform_target" type="fipa" direction="send">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
		</messageevent>
	</events>
	
	<properties>
   		<property name="logging.level">java.util.logging.Level.SEVERE</property>
	</properties>

	<configurations>
		<configuration name="default">
			<goals>
				<!-- Create a goal for walking around. -->
				<initialgoal cref="move.walk_around"/>
			</goals>
			<plans>
				<initialplan ref="carry_plan"/>
			</plans>
		</configuration>
	</configurations>

</agent>
