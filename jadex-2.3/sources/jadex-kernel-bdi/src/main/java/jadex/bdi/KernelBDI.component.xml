<?xml version="1.0" encoding="UTF-8"?>
<!--
  BDI kernel component.
-->
<componenttype xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex
						http://jadex.sourceforge.net/jadex-component-2.3.xsd"
	name="KernelBDI" package="jadex.bdi">
	
	<imports>
		<import>jadex.commons.*</import>
		<import>jadex.commons.future.*</import>
		<import>jadex.bridge.*</import>
		<import>jadex.bridge.service.types.factory.*</import>
		<import>jadex.bridge.service.search.*</import>
		<import>jadex.bridge.fipa.*</import>
		<import>jadex.bridge.service.*</import>
		<import>jadex.bridge.service.types.threadpool.*</import>
		<import>jadex.bdi.runtime.impl.*</import>
	</imports>
	
	<properties>
		<property name="kernel.types" class="String[]">
			new String[]{"agent.xml", "capability.xml"}
		</property>
		<property name="planexecutor_standard" class="IFuture">JavaStandardPlanExecutor.createPlanExecutor($component)</property>
	</properties>
	
	<services>
		<providedservice name="component_factory" class="IComponentFactory">
			<implementation>
				new BDIAgentFactory(
					SUtil.createHashMap(
					new String[]
					{
						"planexecutor_standard", 
						"microplansteps",
						//"planexecutor_bpmn",
						"debugger.panels"
					},
					new Object[]
					{
						$component.getProperty("planexecutor_standard"),
						Boolean.TRUE,
						"jadex.tools.debugger.bdi.BDIViewerDebuggerPanel, jadex.tools.debugger.bdi.BDIAgentInspectorDebuggerPanel, jadex.tools.debugger.bdi.BDIAgentRuleEngineDebuggerPanel"
					}
				), $component)
			</implementation>
		</providedservice>
		<providedservice class="IDynamicBDIFactory">
			<implementation>
				$component.getRawService("component_factory")
			</implementation>
		</providedservice>
	</services>
</componenttype>