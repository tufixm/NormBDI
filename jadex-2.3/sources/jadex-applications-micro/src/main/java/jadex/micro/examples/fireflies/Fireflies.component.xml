<!--
	<H3>The fireflies application descriptor</H3>

	It can be started to launch a firefly scenario.
-->
<componenttype xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:env="http://jadex.sourceforge.net/jadex-envspace"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex
	                    http://jadex.sourceforge.net/jadex-component-2.3.xsd
	                    http://jadex.sourceforge.net/jadex-envspace 
	                    http://jadex.sourceforge.net/jadex-envspace-2.3.xsd"
	name="Fireflies" package="jadex.micro.examples.fireflies">
	
	<imports>
		<import>jadex.extension.envsupport.environment.space2d.action.*</import>
		<import>jadex.extension.envsupport.environment.space2d.*</import>
		<import>jadex.extension.envsupport.environment.*</import>
		<import>jadex.extension.envsupport.math.*</import>
		<import>jadex.extension.envsupport.dataview.*</import>
		<import>jadex.extension.envsupport.observer.perspective.*</import>
		<import>jadex.bdi.planlib.*</import>
		<import>jadex.extension.envsupport.evaluation.*</import>
		<import>jadex.commons.*</import>
		<import>jadex.commons.future.*</import>
		<import>jadex.extension.envsupport.observer.gui.plugin.*</import>
		<import>java.awt.*</import>
	</imports>
	
	<arguments>
		<argument name="number" class="Integer">10</argument>
		<argument name="strategy_delay" class="Boolean">true</argument>
		<argument name="flashes_to_reset" class="Integer">1</argument>
		<argument name="flash_length" class="Integer">1</argument>
		<argument name="cycle_length" class="Integer">10</argument>
		<argument name="show_dark_flies" class="Boolean">true</argument>
	</arguments>
	
	<componenttypes>
		<componenttype name="Firefly" filename="jadex/micro/examples/fireflies/FireflyAgent.class"/>
	</componenttypes>
	
	<extensiontypes>
		<env:envspacetype name="gc2dspace" width="20" height="20" class="ContinuousSpace2D">
			<env:property name="number">$args.number</env:property>
			<env:property name="strategy_delay">$args.strategy_delay</env:property>
			<env:property name="flashes_to_reset">$args.flashes_to_reset</env:property>
			<env:property name="flash_length">$args.flash_length</env:property>
			<env:property name="cycle_length">$args.cycle_length</env:property>
			<env:property name="show_dark_flies">$args.show_dark_flies</env:property>
			
			<env:objecttypes>
				<env:objecttype name="firefly" kdtree="true">
					<env:property name="direction">Math.random()*2*Math.PI</env:property>
					<env:property name="clock">(int)(Math.random()*($space.cycle_length))</env:property>
					<env:property name="threshold">$space.flash_length</env:property>
					<env:property name="reset_level">$space.strategy_delay? $space.flash_length: 0</env:property>
					<env:property name="window">$space.strategy_delay? -1: $space.flash_length+1</env:property>
					<env:property name="flashing" dynamic="true">$object.clock &lt; $object.threshold</env:property>
				</env:objecttype>
			</env:objecttypes>
			
			<env:dataviews>
				<env:dataview name="view_all" class="GeneralDataView2D" />
			</env:dataviews>
			
			<env:avatarmappings>
				<env:avatarmapping componenttype="Firefly" objecttype="firefly"/>
			</env:avatarmappings>
		
			<env:actiontypes>
				<env:actiontype name="move" class="MoveAction" />
			</env:actiontypes>
		
			<env:perspectives>
				<env:perspective name="icon" class="Perspective2D" objectplacement="center">
					<env:drawable objecttype="firefly" width="1.0" height="1.0">
						<env:property name="color" dynamic="true">$object.flashing? Color.YELLOW: Color.gray</env:property>
						<env:property name="rotation" dynamic="true">
							new Vector3Double(0,0,$object.direction)
						</env:property>
						<env:texturedrectangle layer="2" color="color" rotation="rotation" width="0.8" height="0.8" imagepath="jadex/micro/examples/fireflies/images/bug.png" />
						<!-- <env:ellipse color="color" width="1.0" height="1.0">
							<env:drawcondition>$object.flashing</env:drawcondition>
						</env:ellipse> -->
					</env:drawable>
					<env:prelayers>
						<env:colorlayer color="black"/>
					</env:prelayers>
				</env:perspective>
				
				<env:perspective name="abstract" class="Perspective2D" objectplacement="center">
					<env:drawable objecttype="firefly" width="1.0" height="1.0">
						<env:property name="color" dynamic="true">$object.flashing? Color.yellow: Color.gray</env:property>
						<env:property name="rotation" dynamic="true">
							// the triangle must be turned upwards-down
							new Vector3Double(0,0,$object.direction+Math.PI)
						</env:property>
						<env:triangle color="color" rotation="rotation" width="1.0" height="1.0">
							<env:drawcondition>$space.show_dark_flies || $object.flashing</env:drawcondition>
						</env:triangle>
					</env:drawable>
					<env:prelayers>
						<env:colorlayer color="black"/>
					</env:prelayers>
				</env:perspective>
			</env:perspectives>
			
			<env:spaceexecutor class="RoundBasedExecutor">
				<env:property name="space">$space</env:property>
			</env:spaceexecutor>
		</env:envspacetype>
	</extensiontypes>
	
	<configurations>	
		<configuration name="15x15 and 500 flies, kd-tree enabled">
			<arguments>
				<argument name="number">500</argument>
				<argument name="flashes_to_reset">6</argument>
				<argument name="flash_length">3</argument>
				<argument name="cycle_length">12</argument>
			</arguments>
			
			<extensions>
				<env:envspace name="mygc2dspace" type="gc2dspace" width="15" height="15">
					<env:dataproviders>
						<env:dataprovider name="flashes">
							<env:source name="$flies" objecttype="firefly" aggregate="true">
								<env:includecondition>$object.flashing</env:includecondition>
							</env:source>
							<env:data name="time">$time</env:data>
							<env:data name="number_flashes">$flies.size()</env:data>
						</env:dataprovider>
					</env:dataproviders>
			
					<env:dataconsumers>
						<env:dataconsumer name="flashes_chart" class="XYChartDataConsumer">
							<env:property name="dataprovider">"flashes"</env:property>
							<env:property name="title">"Number of flashing flies"</env:property>
							<env:property name="labelx">"Time"</env:property>
							<env:property name="labely">"Flashes"</env:property>
							<env:property name="maxitemcount">500</env:property>
							<env:property name="legend">false</env:property>
							
							<!-- Defines a normal series. -->
							<env:property name="seriesname">"Flashes"</env:property>
							<env:property name="valuex">"time"</env:property>
							<env:property name="valuey">"number_flashes"</env:property>
						</env:dataconsumer>
					</env:dataconsumers>
				
					<env:observers>
						<env:observer name="world" dataview="view_all" perspective="main">
							<env:plugin name="evaluation" class="EvaluationPlugin">
								<env:property name="component_0">((AbstractChartDataConsumer)$space.getDataConsumer("flashes_chart")).getChartPanel()</env:property>
							</env:plugin>
						</env:observer>
					</env:observers>
				</env:envspace>
			</extensions>

			<components>
				<component name="&quot;Firefly#&quot;+$n" type="Firefly" number="$args.number"/>
			</components>
		</configuration>
		
		<configuration name="15x15 and 100 flies">
			<arguments>
				<argument name="number">100</argument>
			</arguments>
			
			<extensions>
				<env:envspace name="mygc2dspace" type="gc2dspace" width="15" height="15">
					<env:dataproviders>
						<env:dataprovider name="flashes">
							<env:source name="$flies" objecttype="firefly" aggregate="true">
								<env:includecondition>$object.flashing</env:includecondition>
							</env:source>
							<env:data name="time">$time</env:data>
							<env:data name="number_flashes">$flies.size()</env:data>
						</env:dataprovider>
					</env:dataproviders>
			
					<env:dataconsumers>
						<env:dataconsumer name="flashes_chart" class="XYChartDataConsumer">
							<env:property name="dataprovider">"flashes"</env:property>
							<env:property name="title">"Number of flashing flies"</env:property>
							<env:property name="labelx">"Time"</env:property>
							<env:property name="labely">"Flashes"</env:property>
							<env:property name="maxitemcount">500</env:property>
							<env:property name="legend">false</env:property>
							
							<!-- Defines a normal series. -->
							<env:property name="seriesname">"Flashes"</env:property>
							<env:property name="valuex">"time"</env:property>
							<env:property name="valuey">"number_flashes"</env:property>
						</env:dataconsumer>
					</env:dataconsumers>
				
					<env:observers>
						<env:observer name="world" dataview="view_all" perspective="main">
							<env:plugin name="evaluation" class="EvaluationPlugin">
								<env:property name="component_0">((AbstractChartDataConsumer)$space.getDataConsumer("flashes_chart")).getChartPanel()</env:property>
							</env:plugin>
						</env:observer>
					</env:observers>
				</env:envspace>
			</extensions>

			<components>
				<component name="&quot;Firefly#&quot;+$n" type="Firefly" number="$args.number"/>
			</components>
		</configuration>
		
		<configuration name="15x15 and 100 flies without evaluation">
			<arguments>
				<argument name="number">100</argument>
			</arguments>
			
			<extensions>
				<env:envspace name="mygc2dspace" type="gc2dspace" width="15" height="15">
					<env:observers>
						<env:observer name="world" dataview="view_all" perspective="main" />
					</env:observers>
				</env:envspace>
			</extensions>

			<components>
				<component name="&quot;Firefly#&quot;+$n" type="Firefly" number="$args.number"/>
			</components>
		</configuration>
		
		<configuration name="15x15 and 200 flies without evaluation">
			<arguments>
				<argument name="number">200</argument>
			</arguments>
			
			<extensions>				
				<env:envspace name="mygc2dspace" type="gc2dspace" width="15" height="15">
					<env:observers>
						<env:observer name="world" dataview="view_all" perspective="main" />
					</env:observers>
				</env:envspace>
			</extensions>

			<components>
				<component name="&quot;Firefly#&quot;+$n" type="Firefly" number="$args.number"/>
			</components>
		</configuration>
	</configurations>

</componenttype>
